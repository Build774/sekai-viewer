{"version":3,"sources":["components/MemberList.tsx"],"names":["useStyle","makeStyles","theme","unitIcon","breakpoints","down","height","memberSelectImg","width","cursor","MemberList","classes","layoutClasses","useLayoutStyles","t","useTranslation","path","useRouteMatch","useCachedData","unitProfiles","gameCharas","useState","charaUnitMap","setCharaUnitMap","useEffect","document","title","length","units","sort","a","b","seq","map","up","unit","reduce","sum","filter","gc","variant","className","header","container","spacing","direction","Object","keys","key","item","justify","style","margin","to","src","UnitLogoMap","alt","marginBottom","chara","xs","md","id","textDecoration","process","String"],"mappings":"qPASMA,EAAWC,aAAW,SAACC,GAAD,YAAY,CACtCC,UAAQ,mBACLD,EAAME,YAAYC,KAAK,MAAQ,CAC9BC,OAAQ,SAFJ,uBAIE,QAJF,GAMRC,gBAAiB,CACfC,MAAO,OACPC,OAAQ,eAiFGC,UA7EkB,WAC/B,IAAMC,EAAUX,IACVY,EAAgBC,cACdC,EAAMC,cAAND,EACAE,EAASC,cAATD,KAJ6B,EAMdE,YAA4B,gBAA5CC,EAN8B,sBAOhBD,YAA0B,kBAAxCE,EAP8B,sBASGC,mBAErC,IAXkC,mBAS9BC,EAT8B,KAShBC,EATgB,KA+BrC,OAlBAC,qBAAU,WACRC,SAASC,MAAQZ,EAAE,sBAClB,CAACA,IAEJU,qBAAU,WACR,GAAIL,EAAaQ,QAAUP,EAAWO,OAAQ,CAC5C,IAAMC,EAAQT,EACXU,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,IAAMD,EAAEC,OACzBC,KAAI,SAACC,GAAD,OAAQA,EAAGC,QAClBZ,EACEK,EAAMQ,QAAwC,SAACC,EAAKF,GAElD,OADAE,EAAIF,GAAQf,EAAWkB,QAAO,SAACC,GAAD,OAAQA,EAAGJ,OAASA,KAC3CE,IACN,QAGN,CAAClB,EAAcC,IAGhB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYoB,QAAQ,KAAKC,UAAW7B,EAAc8B,QAC/C5B,EAAE,qBAEL,kBAAC,IAAD,CAAM6B,WAAS,EAACC,QAAS,EAAGC,UAAU,UACnCC,OAAOC,KAAKzB,GAAcW,KAAI,SAACE,GAAD,OAC7B,kBAAC,WAAD,CAAUa,IAAG,eAAUb,IACrB,kBAAC,IAAD,CAAMc,MAAI,EAACN,WAAS,EAACO,QAAQ,SAASC,MAAO,CAAEC,OAAQ,YACrD,kBAAC,IAAD,CAAMC,GAAI,SAAWlB,GACnB,yBACEM,UAAW9B,EAAQR,SACnBmD,IAAKC,IAAYpB,GACjBqB,IAAKrB,MAIX,kBAAC,IAAD,CACEc,MAAI,EACJN,WAAS,EACTO,QAAQ,SACRN,QAAS,EACTO,MAAO,CAAEM,aAAc,QAEtBnC,EAAaa,GAAMF,KAAI,SAACyB,GAAD,OACtB,kBAAC,IAAD,CAAMT,MAAI,EAACU,GAAI,EAAGC,GAAI,EAAGZ,IAAG,gBAAWU,EAAMG,KAC3C,kBAAC,IAAD,CACER,GAAIrC,EAAO,IAAM0C,EAAMG,GACvBV,MAAO,CAAEW,eAAgB,SAEzB,yBACErB,UAAW9B,EAAQJ,gBACnB+C,IAAG,UAAKS,+BAAL,oEAAmGL,EAAMG,GAAzG,SACHL,IAAKQ,OAAON,EAAMG","file":"static/js/29.4e0b261d.chunk.js","sourcesContent":["import { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { useLayoutStyles } from \"../styles/layout\";\nimport { IGameChara, IUnitProfile } from \"../types\";\nimport { useCachedData } from \"../utils\";\nimport { UnitLogoMap } from \"../utils/resources\";\n\nconst useStyle = makeStyles((theme) => ({\n  unitIcon: {\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"48px\",\n    },\n    height: \"96px\",\n  },\n  memberSelectImg: {\n    width: \"100%\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst MemberList: React.FC<{}> = () => {\n  const classes = useStyle();\n  const layoutClasses = useLayoutStyles();\n  const { t } = useTranslation();\n  const { path } = useRouteMatch();\n\n  const [unitProfiles] = useCachedData<IUnitProfile>(\"unitProfiles\");\n  const [gameCharas] = useCachedData<IGameChara>(\"gameCharacters\");\n\n  const [charaUnitMap, setCharaUnitMap] = useState<{\n    [key: string]: IGameChara[];\n  }>({});\n\n  useEffect(() => {\n    document.title = t(\"title:memberList\");\n  }, [t]);\n\n  useEffect(() => {\n    if (unitProfiles.length && gameCharas.length) {\n      const units = unitProfiles\n        .sort((a, b) => a.seq - b.seq)\n        .map((up) => up.unit);\n      setCharaUnitMap(\n        units.reduce<{ [key: string]: IGameChara[] }>((sum, unit) => {\n          sum[unit] = gameCharas.filter((gc) => gc.unit === unit);\n          return sum;\n        }, {})\n      );\n    }\n  }, [unitProfiles, gameCharas]);\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {t(\"common:character\")}\n      </Typography>\n      <Grid container spacing={1} direction=\"column\">\n        {Object.keys(charaUnitMap).map((unit) => (\n          <Fragment key={`unit-${unit}`}>\n            <Grid item container justify=\"center\" style={{ margin: \"0.3em 0\" }}>\n              <Link to={\"/unit/\" + unit}>\n                <img\n                  className={classes.unitIcon}\n                  src={UnitLogoMap[unit]}\n                  alt={unit}\n                ></img>\n              </Link>\n            </Grid>\n            <Grid\n              item\n              container\n              justify=\"center\"\n              spacing={2}\n              style={{ marginBottom: \"1em\" }}\n            >\n              {charaUnitMap[unit].map((chara) => (\n                <Grid item xs={3} md={2} key={`chara-${chara.id}`}>\n                  <Link\n                    to={path + \"/\" + chara.id}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <img\n                      className={classes.memberSelectImg}\n                      src={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/character/character_select_rip/chr_tl_${chara.id}.webp`}\n                      alt={String(chara.id)}\n                    ></img>\n                  </Link>\n                </Grid>\n              ))}\n            </Grid>\n          </Fragment>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MemberList;\n"],"sourceRoot":""}