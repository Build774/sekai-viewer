{"version":3,"sources":["utils/index.ts","styles/layout.ts","components/subs/ContentTrans.tsx","components/subs/InfiniteScroll.tsx","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/GachaList.tsx"],"names":["useRefState","initialValue","useState","state","setState","stateRef","useRef","useEffect","current","masterDataCache","useCachedData","name","cached","cachedRef","setCached","fetchCached","useCallback","a","Axios","get","data","length","then","useRealtimeEventData","eventId","time","first10","rank20","rank30","rank40","rank50","rank100","rank200","rank300","rank400","rank500","rank1000","rank2000","rank3000","rank4000","rank5000","rank10000","rank20000","rank30000","rank40000","rank50000","rank100000","eventRealtimeData","eventRealtimeDataRef","setEventRealtimeData","Date","now","musicTagToName","all","vocaloid","light_music_club","idol","school_refusal","theme_park","street","useCharaName","contentTransMode","charas","useAssetI18n","assetT","assetI18n","charaId","chara","find","id","firstName","givenName","includes","language","useLayoutStyles","makeStyles","theme","header","fontWeight","content","marginTop","spacing","marginBottom","marginLeft","marginRight","ContentTrans","mode","contentKey","original","originalProps","translatedProps","assetTOptions","container","direction","color","CharaNameTrans","characterId","setChara","c","ReleaseCondTrans","releaseCondId","releaseConds","releaseCond","setReleaseCond","rc","i18nKey","releaseConditionType","Object","assign","level","releaseConditionTypeLevel","sentence","breakpoints","defaultGridSize","xs","md","InfiniteScroll","viewComponent","callback","gridSize","_gridSize","forEach","v","i","transformToCompleteGridSizeOptions","breakpoint","useTheme","map","useMediaQuery","down","Boolean","useBreakpoint","hasMore","setHasMore","observer","IntersectionObserver","entries","threshold","listElementRef","currentObserver","currentElement","observe","unobserve","itemsPerRow","numPlaceholders","key","item","sm","lg","xl","index","ref","style","display","paddingTop","Array","from","_","MEDIA_COMPONENTS","CardMedia","React","props","children","classes","className","_props$component","component","Component","image","src","other","_objectWithoutProperties","isMediaComponent","indexOf","composedStyle","_extends","backgroundImage","concat","clsx","root","media","img","undefined","withStyles","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","Skeleton","_props$animation","animation","height","_props$variant","variant","hasChildren","withChildren","fitContent","heightAuto","backgroundColor","fade","palette","text","primary","type","transformOrigin","transform","borderRadius","shape","rect","circle","pulse","opacity","wave","position","overflow","background","action","hover","bottom","left","right","top","visibility","maxWidth","Card","_props$raised","raised","Paper","elevation","CardContent","padding","paddingBottom","useStyles","card","cursor","subheader","GachaList","layoutClasses","path","useRouteMatch","t","useTranslation","useContext","SettingContext","gachas","setGachas","gachasCache","gachasCacheRef","page","pageRef","setPage","limit","limitRef","lastQueryFinRef","setLastQueryFin","isReadyRef","setIsReady","document","title","slice","getPaginatedGachas","to","textDecoration","process","assetbundleName","isIntersecting"],"mappings":"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","file":"static/js/19.376be8d4.chunk.js","sourcesContent":["import { IUnitProfile } from \"./../types.d\";\nimport Axios from \"axios\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  IGachaInfo,\n  ICardInfo,\n  IGameChara,\n  IMusicInfo,\n  ISkillInfo,\n  ICardRarity,\n  ICharacterRank,\n  IMusicVocalInfo,\n  IOutCharaProfile,\n  IUserInformationInfo,\n  IMusicDifficultyInfo,\n  IMusicTagInfo,\n  IReleaseCondition,\n  IMusicDanceMembers,\n  IEventInfo,\n  IEventDeckBonus,\n  IGameCharaUnit,\n  IEventRealtimeRank,\n  IResourceBoxInfo,\n  IHonorInfo,\n  ICardEpisode,\n  ContentTransModeType,\n  ITipInfo,\n  ICharaProfile,\n} from \"../types\";\nimport { useAssetI18n } from \"./i18n\";\n\nexport function useRefState<S>(\n  initialValue: S\n): [S, React.MutableRefObject<S>, React.Dispatch<React.SetStateAction<S>>] {\n  const [state, setState] = useState(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nlet masterDataCache: { [key: string]: any[] } = {};\n\nexport function useCachedData<\n  T extends\n    | IGachaInfo\n    | ICardInfo\n    | IGameChara\n    | IMusicInfo\n    | ISkillInfo\n    | ICardRarity\n    | ICharacterRank\n    | IMusicVocalInfo\n    | IOutCharaProfile\n    | IUserInformationInfo\n    | IMusicDifficultyInfo\n    | IMusicTagInfo\n    | IReleaseCondition\n    | IMusicDanceMembers\n    | IEventInfo\n    | IEventDeckBonus\n    | IGameCharaUnit\n    | IResourceBoxInfo\n    | IHonorInfo\n    | ICardEpisode\n    | ITipInfo\n    | ICharaProfile\n    | IUnitProfile\n>(name: string): [T[], React.MutableRefObject<T[]>] {\n  const [cached, cachedRef, setCached] = useRefState<T[]>([]);\n\n  const fetchCached = useCallback(async () => {\n    const { data }: { data: T[] } = await Axios.get(\n      `https://raw.githubusercontent.com/Sekai-World/sekai-master-db-diff/master/${name}.json`\n    );\n    return data;\n  }, [name]);\n\n  useEffect(() => {\n    if (masterDataCache[name] && masterDataCache[name].length)\n      setCached(masterDataCache[name]);\n    else\n      fetchCached().then((data) => {\n        setCached(data);\n        masterDataCache[name] = data;\n      });\n  }, [fetchCached, name, setCached]);\n\n  return [cached, cachedRef];\n}\n\nexport function useRealtimeEventData(\n  eventId: number\n): [\n  () => Promise<IEventRealtimeRank>,\n  IEventRealtimeRank,\n  React.MutableRefObject<IEventRealtimeRank>\n] {\n  const [\n    eventRealtimeData,\n    eventRealtimeDataRef,\n    setEventRealtimeData,\n  ] = useRefState<IEventRealtimeRank>({\n    time: 0,\n    first10: [],\n    rank20: [],\n    rank30: [],\n    rank40: [],\n    rank50: [],\n    rank100: [],\n    rank200: [],\n    rank300: [],\n    rank400: [],\n    rank500: [],\n    rank1000: [],\n    rank2000: [],\n    rank3000: [],\n    rank4000: [],\n    rank5000: [],\n    rank10000: [],\n    rank20000: [],\n    rank30000: [],\n    rank40000: [],\n    rank50000: [],\n    rank100000: [],\n  });\n\n  const refreshData = useCallback(async () => {\n    const { data }: { data: IEventRealtimeRank } = await Axios.get(\n      `https://bitbucket.org/sekai-world/sekai-event-track/raw/main/event${eventId}.json?t=${Date.now()}`\n    );\n\n    setEventRealtimeData(data);\n    return data;\n  }, [eventId, setEventRealtimeData]);\n\n  return [refreshData, eventRealtimeData, eventRealtimeDataRef];\n}\n\nexport const musicCategoryToName: { [key: string]: string } = {\n  mv: \"3D MV\",\n  original: \"Original MV\",\n  sekai: \"Sekai MV\",\n  image: \"Static Image\",\n  mv_2d: \"2D MV\",\n};\n\nexport const musicTagToName: { [key: string]: string } = {\n  all: \"All\",\n  vocaloid: \"Vocaloid\",\n  light_music_club: \"Light Music Club\",\n  idol: \"Idol\",\n  school_refusal: \"School Refusal\",\n  theme_park: \"Theme Park\",\n  street: \"Street\",\n};\n\nexport function useCharaName(contentTransMode: ContentTransModeType) {\n  const [charas] = useCachedData<IGameChara>(\"gameCharacters\");\n  const { assetT, assetI18n } = useAssetI18n();\n  return useCallback(\n    (charaId: number): string | undefined => {\n      const chara = charas.find((chara) => chara.id === charaId);\n      if (chara?.firstName) {\n        switch (contentTransMode) {\n          case \"original\":\n            return `${chara.firstName} ${chara.givenName}`;\n          case \"translated\":\n            return [\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language)\n              ? `${assetT(\n                  `character_name:${charaId}.firstName`,\n                  chara.firstName\n                )} ${assetT(\n                  `character_name:${charaId}.givenName`,\n                  chara.givenName\n                )}`\n              : `${assetT(\n                  `character_name:${charaId}.givenName`,\n                  chara.givenName\n                )} ${assetT(\n                  `character_name:${charaId}.firstName`,\n                  chara.firstName\n                )}`;\n          case \"both\":\n            return (\n              `${chara.firstName} ${chara.givenName} | ` +\n              ([\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language)\n                ? `${assetT(\n                    `character_name:${charaId}.firstName`,\n                    chara.firstName\n                  )} ${assetT(\n                    `character_name:${charaId}.givenName`,\n                    chara.givenName\n                  )}`\n                : `${assetT(\n                    `character_name:${charaId}.givenName`,\n                    chara.givenName\n                  )} ${assetT(\n                    `character_name:${charaId}.firstName`,\n                    chara.firstName\n                  )}`)\n            );\n        }\n      }\n      return chara?.givenName;\n    },\n    [assetI18n.language, assetT, charas, contentTransMode]\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useLayoutStyles = makeStyles((theme) => ({\n  header: {\n    fontWeight: \"bold\",\n  },\n  content: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n}));\n\nexport { useLayoutStyles };\n","import { Grid, Typography, TypographyProps } from \"@material-ui/core\";\nimport { StringMap, TOptions } from \"i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ContentTransModeType,\n  IGameChara,\n  IReleaseCondition,\n} from \"../../types\";\nimport { useCachedData } from \"../../utils\";\nimport { useAssetI18n } from \"../../utils/i18n\";\n\nexport const ContentTrans: React.FC<{\n  mode: ContentTransModeType;\n  contentKey: string;\n  original: string;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  contentKey,\n  original,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const { assetT } = useAssetI18n();\n  switch (mode) {\n    case \"original\":\n      return <Typography {...originalProps}>{original}</Typography>;\n    case \"translated\":\n      return (\n        <Typography {...translatedProps}>\n          {assetT(contentKey, original, assetTOptions)}\n        </Typography>\n      );\n    case \"both\":\n      return (\n        <Grid container direction=\"column\">\n          <Typography {...originalProps} color=\"textPrimary\">\n            {original}\n          </Typography>\n          <Typography {...translatedProps} color=\"textSecondary\">\n            {assetT(contentKey, original, assetTOptions)}\n          </Typography>\n        </Grid>\n      );\n  }\n};\n\nexport const CharaNameTrans: React.FC<{\n  mode: ContentTransModeType;\n  characterId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({ mode, characterId, originalProps, translatedProps, assetTOptions }) => {\n  const [charas] = useCachedData<IGameChara>(\"gameCharacters\");\n  const { assetT, assetI18n } = useAssetI18n();\n\n  const [chara, setChara] = useState<IGameChara>();\n\n  useEffect(() => {\n    if (charas.length) {\n      setChara(charas.find((c) => c.id === characterId));\n    }\n  }, [charas, characterId]);\n\n  if (chara) {\n    switch (mode) {\n      case \"original\":\n        return (\n          <Typography {...originalProps}>\n            {chara.firstName} {chara.givenName}\n          </Typography>\n        );\n      case \"translated\":\n        return [\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n          <Typography {...translatedProps}>\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}{\" \"}\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}\n          </Typography>\n        ) : (\n          <Typography>\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}{\" \"}\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}\n          </Typography>\n        );\n      case \"both\":\n        return (\n          <Grid container direction=\"column\">\n            <Typography {...originalProps}>\n              {chara.firstName} {chara.givenName}\n            </Typography>\n            {[\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}{\" \"}\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}\n              </Typography>\n            ) : (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}{\" \"}\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}\n              </Typography>\n            )}\n          </Grid>\n        );\n    }\n  } else {\n    return <Typography></Typography>;\n  }\n};\n\nexport const ReleaseCondTrans: React.FC<{\n  mode: ContentTransModeType;\n  releaseCondId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  releaseCondId,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const [releaseConds] = useCachedData<IReleaseCondition>(\"releaseConditions\");\n\n  const [releaseCond, setReleaseCond] = useState<IReleaseCondition>();\n\n  useEffect(() => {\n    if (releaseConds.length) {\n      setReleaseCond(releaseConds.find((rc) => rc.id === releaseCondId));\n    }\n  }, [releaseCondId, releaseConds]);\n\n  if (releaseCond) {\n    let i18nKey = \"\";\n    switch (releaseCond.releaseConditionType) {\n      case \"none\":\n        i18nKey = `release_cond:none_${releaseCond.id}`;\n        break;\n      case \"card_level\":\n        i18nKey = `release_cond:card_level`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          level: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      default:\n        i18nKey = `release_cond:${releaseCond.releaseConditionType}`;\n        break;\n    }\n    return (\n      <ContentTrans\n        mode={mode}\n        contentKey={i18nKey}\n        original={releaseCond.sentence}\n        originalProps={originalProps}\n        translatedProps={translatedProps}\n        assetTOptions={assetTOptions}\n      />\n    );\n  } else {\n    return <div></div>;\n  }\n};\n","import {\n  // Box,\n  Grid,\n  // makeStyles,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\n\n// only divisor of 12\ntype GridSize = 1 | 2 | 3 | 4 | 6 | 12 | undefined;\n\ninterface GridSizeOptions {\n  /**\n   * grid size for `xs` and wider (if not overridden) \\\n   * omit this property or set `undefined` to use default (12)\n   */\n  xs?: GridSize;\n  /**\n   * grid size for `sm` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `xs` \\\n   */\n  sm?: GridSize;\n  /**\n   * grid size for `md` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `sm` \\\n   */\n  md?: GridSize;\n  /**\n   * grid size for `lg` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `md` \\\n   */\n  lg?: GridSize;\n  /**\n   * grid size for `xl` and wider \\\n   * omit this property or set `undefined` to inherit from `lg` \\\n   */\n  xl?: GridSize;\n}\n\ntype CompleteGridSizeOptions = {\n  [T in keyof Required<GridSizeOptions>]: Exclude<GridSize, undefined>;\n};\n\ninterface IISProps<T> {\n  readonly viewComponent: React.FC<{ data?: T; index?: number }>;\n  readonly callback: (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  readonly data: readonly T[];\n  readonly gridSize?: Readonly<GridSizeOptions>;\n}\n\n// NOTE: `breakpoints` must be sorted ascending by size\nconst breakpoints = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"] as const;\n\nconst defaultXSGridSize: GridSize = 12;\nconst defaultGridSize: Readonly<GridSizeOptions> = {\n  xs: defaultXSGridSize,\n  md: 4,\n};\n\nfunction useBreakpoint(): keyof GridSizeOptions {\n  const theme = useTheme();\n\n  // NOTE: The number of calls to `useMediaQuery` must always be constant.\n  // https://en.reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n  const downBreakpoints = breakpoints.map(\n    (breakpoint) =>\n      // NOTE: `down` includes itself\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useMediaQuery(theme.breakpoints.down(breakpoint)) && breakpoint\n  );\n\n  // NOTE: `down('xl')` always returns `true` so `|| breakpoints[breakpoints.length - 1]`\n  //       is not actually needed, but it's written for clarity and typing.\n  return downBreakpoints.find(Boolean) || breakpoints[breakpoints.length - 1];\n}\n\nfunction transformToCompleteGridSizeOptions(\n  _gridSize?: Readonly<GridSizeOptions> | undefined\n): CompleteGridSizeOptions {\n  // use default if gridSize is not provided\n  // not using defaults per properties because `{ md: 4 }` would not be desired\n  const gridSize = {\n    ...(_gridSize || defaultGridSize),\n  };\n\n  // inherit the value of the smaller breakpoint if not specified\n  breakpoints.forEach((v, i, a) => {\n    if (!gridSize[v]) {\n      gridSize[v] = i > 0 ? gridSize[a[i - 1]] : defaultXSGridSize;\n    }\n  });\n\n  return gridSize as CompleteGridSizeOptions;\n}\n\nfunction InfiniteScroll<T>({\n  viewComponent,\n  callback,\n  data,\n  gridSize: _gridSize,\n}: React.PropsWithChildren<IISProps<T>>): React.ReactElement<IISProps<T>> {\n  // this is necessary because of `viewGridSize`\n  const gridSize = transformToCompleteGridSizeOptions(_gridSize);\n\n  const breakpoint = useBreakpoint();\n\n  const [hasMore, setHasMore] = useState<boolean>(true);\n\n  const observer = useRef(\n    new IntersectionObserver((entries) => callback(entries, setHasMore), {\n      threshold: 0.5,\n    })\n  );\n  const listElementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setHasMore(true);\n  }, [data]);\n\n  useEffect(() => {\n    const currentObserver = observer.current;\n    const currentElement = listElementRef.current;\n    if (currentElement) currentObserver.observe(currentElement);\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  });\n\n  const viewGridSize = gridSize[breakpoint];\n  const itemsPerRow = 12 / viewGridSize;\n  const numPlaceholders = data.length ? itemsPerRow : itemsPerRow * 2;\n\n  return (\n    <Fragment>\n      <Grid container direction=\"row\" spacing={1}>\n        {data.length\n          ? data.map((data, i) => (\n              <Grid\n                key={i}\n                item\n                xs={gridSize.xs}\n                sm={gridSize.sm}\n                md={gridSize.md}\n                lg={gridSize.lg}\n                xl={gridSize.xl}\n              >\n                {viewComponent({ data, index: i })}\n              </Grid>\n            ))\n          : null}\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        ref={listElementRef}\n        style={{ display: hasMore ? \"flex\" : \"none\", paddingTop: \"4px\" }}\n        spacing={1}\n      >\n        {Array.from({\n          length: numPlaceholders,\n        }).map((_, i) => (\n          <Grid\n            key={`empty-${i}`}\n            item\n            xs={gridSize.xs}\n            sm={gridSize.sm}\n            md={gridSize.md}\n            lg={gridSize.lg}\n            xl={gridSize.xl}\n          >\n            {viewComponent({})}\n          </Grid>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default InfiniteScroll;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import {\n  Card,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { useLayoutStyles } from \"../styles/layout\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { useCachedData, useRefState } from \"../utils\";\nimport InfiniteScroll from \"./subs/InfiniteScroll\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { IGachaInfo } from \"../types\";\nimport { SettingContext } from \"../context\";\nimport { ContentTrans } from \"./subs/ContentTrans\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    paddingTop: \"56.25%\",\n    backgroundSize: \"contain\",\n  },\n  card: {\n    // margin: theme.spacing(0.5),\n    cursor: \"pointer\",\n  },\n  subheader: {\n    \"white-space\": \"nowrap\",\n    overflow: \"hidden\",\n    \"text-overflow\": \"ellipsis\",\n    \"max-width\": \"260px\",\n  },\n}));\n\nfunction getPaginatedGachas(gachas: IGachaInfo[], page: number, limit: number) {\n  return gachas.slice(limit * (page - 1), limit * page);\n}\n\nconst GachaList: React.FC<{}> = () => {\n  const classes = useStyles();\n  const layoutClasses = useLayoutStyles();\n  const { path } = useRouteMatch();\n  const { t } = useTranslation();\n  const { contentTransMode } = useContext(SettingContext)!;\n\n  const [gachas, setGachas] = useState<IGachaInfo[]>([]);\n  const [gachasCache, gachasCacheRef] = useCachedData<IGachaInfo>(\"gachas\");\n\n  const [page, pageRef, setPage] = useRefState<number>(1);\n  const [limit, limitRef] = useRefState<number>(12);\n  const [, lastQueryFinRef, setLastQueryFin] = useRefState<boolean>(true);\n  const [, isReadyRef, setIsReady] = useRefState<boolean>(false);\n\n  useEffect(() => {\n    document.title = t(\"title:gachaList\");\n  }, [t]);\n\n  useEffect(() => {\n    setGachas((gachas) => [\n      ...gachas,\n      ...getPaginatedGachas(gachasCache, page, limit),\n    ]);\n    setLastQueryFin(true);\n  }, [page, limit, setLastQueryFin, gachasCache]);\n\n  useEffect(() => {\n    setIsReady(Boolean(gachasCache.length));\n  }, [setIsReady, gachasCache]);\n\n  const callback = (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    if (!isReadyRef.current) return;\n    if (\n      entries[0].isIntersecting &&\n      lastQueryFinRef.current &&\n      (!gachasCacheRef.current.length ||\n        gachasCacheRef.current.length > pageRef.current * limitRef.current)\n    ) {\n      setPage((page) => page + 1);\n      setLastQueryFin(false);\n    } else if (\n      gachasCacheRef.current.length &&\n      gachasCacheRef.current.length <= pageRef.current * limitRef.current\n    ) {\n      setHasMore(false);\n    }\n  };\n\n  const ListCard: React.FC<{ data?: IGachaInfo }> = ({ data }) => {\n    if (!data) {\n      // loading\n      return (\n        <Card className={classes.card}>\n          <Skeleton variant=\"rect\" className={classes.media}></Skeleton>\n          <CardContent>\n            <Typography variant=\"subtitle1\" className={classes.subheader}>\n              <Skeleton variant=\"text\" width=\"90%\"></Skeleton>\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n    return (\n      <Link to={path + \"/\" + data.id} style={{ textDecoration: \"none\" }}>\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.media}\n            image={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/gacha/${data.assetbundleName}/logo_rip/logo.webp`}\n            title={data.name}\n          ></CardMedia>\n          <CardContent style={{ paddingBottom: \"16px\" }}>\n            <ContentTrans\n              mode={contentTransMode}\n              contentKey={`gacha_name:${data.id}`}\n              original={data.name}\n              originalProps={{\n                variant: \"subtitle1\",\n                className: classes.subheader,\n              }}\n              translatedProps={{\n                variant: \"subtitle1\",\n                className: classes.subheader,\n              }}\n            />\n          </CardContent>\n        </Card>\n      </Link>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {t(\"common:gacha\")}\n      </Typography>\n      <Container className={layoutClasses.content}>\n        {InfiniteScroll<IGachaInfo>({\n          viewComponent: ListCard,\n          callback,\n          data: gachas,\n          gridSize: {\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 3,\n          },\n        })}\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default GachaList;\n"],"sourceRoot":""}