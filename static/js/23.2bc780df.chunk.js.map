{"version":3,"sources":["components/subs/ContentTrans.tsx","components/subs/InfiniteScroll.tsx","styles/interactive.ts","../node_modules/@material-ui/core/esm/Link/Link.js","stores/reducers.ts","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/icons/esm/Update.js","../node_modules/@material-ui/icons/esm/Publish.js","../node_modules/@material-ui/icons/esm/PublishOutlined.js","../node_modules/@material-ui/icons/esm/GetApp.js","../node_modules/@material-ui/icons/esm/GetAppOutlined.js","components/StampList.tsx"],"names":["ContentTrans","mode","contentKey","original","originalProps","translatedProps","assetTOptions","assetT","useAssetI18n","container","direction","color","CharaNameTrans","characterId","useCachedData","charas","assetI18n","useState","chara","setChara","useEffect","length","find","c","id","firstName","givenName","includes","language","ReleaseCondTrans","releaseCondId","releaseConds","releaseCond","setReleaseCond","rc","i18nKey","releaseConditionType","Object","assign","level","releaseConditionTypeLevel","sentence","breakpoints","defaultGridSize","xs","md","InfiniteScroll","viewComponent","callback","data","gridSize","_gridSize","forEach","v","i","a","transformToCompleteGridSizeOptions","breakpoint","theme","useTheme","map","useMediaQuery","down","Boolean","useBreakpoint","hasMore","setHasMore","observer","useRef","IntersectionObserver","entries","threshold","listElementRef","currentObserver","current","currentElement","observe","unobserve","itemsPerRow","numPlaceholders","spacing","key","item","sm","lg","xl","index","ref","style","display","paddingTop","Array","from","_","useInteractiveStyles","makeStyles","margin","padding","caption","up","textAlign","sliderContainer","paddingRight","Link","React","props","classes","className","_props$color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","borderStyle","name","characterSelectReducer","state","action","type","payload","slice","indexOf","Error","createSvgIcon","d","Avatar","alt","childrenProp","children","Component","imgProps","sizes","src","srcSet","loaded","_ref","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","overflow","palette","background","default","grey","circle","rounded","shape","square","objectFit","textIndent","createElement","useStyles","media","backgroundSize","card","subheader","StampList","layoutClasses","useLayoutStyles","interactiveClasses","t","useTranslation","contentTransMode","useContext","SettingContext","getCharaName","useCharaName","stampsCache","stamps","setStamps","useRefState","filteredCache","filteredCacheRef","setFilteredCache","filterOpened","setFilterOpened","updateSort","setUpdateSort","useReducer","characterSelected","dispatchCharacterSelected","page","pageRef","setPage","limit","limitRef","lastQueryFinRef","setLastQueryFin","isReadyRef","setIsReady","getPaginatedStamps","useCallback","document","title","cache","filter","s","characterId1","sort","b","header","Container","content","Grid","justify","ButtonGroup","marginBottom","Button","size","onClick","Update","Publish","PublishOutlined","GetApp","GetAppOutlined","Sort","SortOutlined","Collapse","in","Paper","idx","Chip","clickable","avatar","charaIcons","label","href","process","assetbundleName","target","Card","CardMedia","CardContent","paddingBottom","replace","Skeleton","isIntersecting"],"mappings":"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","file":"static/js/23.2bc780df.chunk.js","sourcesContent":["import { Grid, Typography, TypographyProps } from \"@material-ui/core\";\nimport { StringMap, TOptions } from \"i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ContentTransModeType,\n  IGameChara,\n  IReleaseCondition,\n} from \"../../types\";\nimport { useCachedData } from \"../../utils\";\nimport { useAssetI18n } from \"../../utils/i18n\";\n\nexport const ContentTrans: React.FC<{\n  mode: ContentTransModeType;\n  contentKey: string;\n  original: string;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  contentKey,\n  original,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const { assetT } = useAssetI18n();\n  switch (mode) {\n    case \"original\":\n      return <Typography {...originalProps}>{original}</Typography>;\n    case \"translated\":\n      return (\n        <Typography {...translatedProps}>\n          {assetT(contentKey, original, assetTOptions)}\n        </Typography>\n      );\n    case \"both\":\n      return (\n        <Grid container direction=\"column\">\n          <Typography {...originalProps} color=\"textPrimary\">\n            {original}\n          </Typography>\n          <Typography {...translatedProps} color=\"textSecondary\">\n            {assetT(contentKey, original, assetTOptions)}\n          </Typography>\n        </Grid>\n      );\n  }\n};\n\nexport const CharaNameTrans: React.FC<{\n  mode: ContentTransModeType;\n  characterId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({ mode, characterId, originalProps, translatedProps, assetTOptions }) => {\n  const [charas] = useCachedData<IGameChara>(\"gameCharacters\");\n  const { assetT, assetI18n } = useAssetI18n();\n\n  const [chara, setChara] = useState<IGameChara>();\n\n  useEffect(() => {\n    if (charas.length) {\n      setChara(charas.find((c) => c.id === characterId));\n    }\n  }, [charas, characterId]);\n\n  if (chara) {\n    switch (mode) {\n      case \"original\":\n        return (\n          <Typography {...originalProps}>\n            {chara.firstName} {chara.givenName}\n          </Typography>\n        );\n      case \"translated\":\n        return [\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n          <Typography {...translatedProps}>\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}{\" \"}\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}\n          </Typography>\n        ) : (\n          <Typography>\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}{\" \"}\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}\n          </Typography>\n        );\n      case \"both\":\n        return (\n          <Grid container direction=\"column\">\n            <Typography {...originalProps}>\n              {chara.firstName} {chara.givenName}\n            </Typography>\n            {[\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}{\" \"}\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}\n              </Typography>\n            ) : (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}{\" \"}\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}\n              </Typography>\n            )}\n          </Grid>\n        );\n    }\n  } else {\n    return <Typography></Typography>;\n  }\n};\n\nexport const ReleaseCondTrans: React.FC<{\n  mode: ContentTransModeType;\n  releaseCondId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  releaseCondId,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const [releaseConds] = useCachedData<IReleaseCondition>(\"releaseConditions\");\n\n  const [releaseCond, setReleaseCond] = useState<IReleaseCondition>();\n\n  useEffect(() => {\n    if (releaseConds.length) {\n      setReleaseCond(releaseConds.find((rc) => rc.id === releaseCondId));\n    }\n  }, [releaseCondId, releaseConds]);\n\n  if (releaseCond) {\n    let i18nKey = \"\";\n    switch (releaseCond.releaseConditionType) {\n      case \"none\":\n        i18nKey = `release_cond:none_${releaseCond.id}`;\n        break;\n      case \"card_level\":\n        i18nKey = `release_cond:card_level`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          level: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      default:\n        i18nKey = `release_cond:${releaseCond.releaseConditionType}`;\n        break;\n    }\n    return (\n      <ContentTrans\n        mode={mode}\n        contentKey={i18nKey}\n        original={releaseCond.sentence}\n        originalProps={originalProps}\n        translatedProps={translatedProps}\n        assetTOptions={assetTOptions}\n      />\n    );\n  } else {\n    return <div></div>;\n  }\n};\n","import {\n  // Box,\n  Grid,\n  // makeStyles,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\n\n// only divisor of 12\ntype GridSize = 1 | 2 | 3 | 4 | 6 | 12 | undefined;\n\ninterface GridSizeOptions {\n  /**\n   * grid size for `xs` and wider (if not overridden) \\\n   * omit this property or set `undefined` to use default (12)\n   */\n  xs?: GridSize;\n  /**\n   * grid size for `sm` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `xs` \\\n   */\n  sm?: GridSize;\n  /**\n   * grid size for `md` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `sm` \\\n   */\n  md?: GridSize;\n  /**\n   * grid size for `lg` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `md` \\\n   */\n  lg?: GridSize;\n  /**\n   * grid size for `xl` and wider \\\n   * omit this property or set `undefined` to inherit from `lg` \\\n   */\n  xl?: GridSize;\n}\n\ntype CompleteGridSizeOptions = {\n  [T in keyof Required<GridSizeOptions>]: Exclude<GridSize, undefined>;\n};\n\ninterface IISProps<T> {\n  readonly viewComponent: React.FC<{ data?: T; index?: number }>;\n  readonly callback: (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  readonly data: readonly T[];\n  readonly gridSize?: Readonly<GridSizeOptions>;\n}\n\n// NOTE: `breakpoints` must be sorted ascending by size\nconst breakpoints = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"] as const;\n\nconst defaultXSGridSize: GridSize = 12;\nconst defaultGridSize: Readonly<GridSizeOptions> = {\n  xs: defaultXSGridSize,\n  md: 4,\n};\n\nfunction useBreakpoint(): keyof GridSizeOptions {\n  const theme = useTheme();\n\n  // NOTE: The number of calls to `useMediaQuery` must always be constant.\n  // https://en.reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n  const downBreakpoints = breakpoints.map(\n    (breakpoint) =>\n      // NOTE: `down` includes itself\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useMediaQuery(theme.breakpoints.down(breakpoint)) && breakpoint\n  );\n\n  // NOTE: `down('xl')` always returns `true` so `|| breakpoints[breakpoints.length - 1]`\n  //       is not actually needed, but it's written for clarity and typing.\n  return downBreakpoints.find(Boolean) || breakpoints[breakpoints.length - 1];\n}\n\nfunction transformToCompleteGridSizeOptions(\n  _gridSize?: Readonly<GridSizeOptions> | undefined\n): CompleteGridSizeOptions {\n  // use default if gridSize is not provided\n  // not using defaults per properties because `{ md: 4 }` would not be desired\n  const gridSize = {\n    ...(_gridSize || defaultGridSize),\n  };\n\n  // inherit the value of the smaller breakpoint if not specified\n  breakpoints.forEach((v, i, a) => {\n    if (!gridSize[v]) {\n      gridSize[v] = i > 0 ? gridSize[a[i - 1]] : defaultXSGridSize;\n    }\n  });\n\n  return gridSize as CompleteGridSizeOptions;\n}\n\nfunction InfiniteScroll<T>({\n  viewComponent,\n  callback,\n  data,\n  gridSize: _gridSize,\n}: React.PropsWithChildren<IISProps<T>>): React.ReactElement<IISProps<T>> {\n  // this is necessary because of `viewGridSize`\n  const gridSize = transformToCompleteGridSizeOptions(_gridSize);\n\n  const breakpoint = useBreakpoint();\n\n  const [hasMore, setHasMore] = useState<boolean>(true);\n\n  const observer = useRef(\n    new IntersectionObserver((entries) => callback(entries, setHasMore), {\n      threshold: 0.5,\n    })\n  );\n  const listElementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setHasMore(true);\n  }, [data]);\n\n  useEffect(() => {\n    const currentObserver = observer.current;\n    const currentElement = listElementRef.current;\n    if (currentElement) currentObserver.observe(currentElement);\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  });\n\n  const viewGridSize = gridSize[breakpoint];\n  const itemsPerRow = 12 / viewGridSize;\n  const numPlaceholders = data.length ? itemsPerRow : itemsPerRow * 2;\n\n  return (\n    <Fragment>\n      <Grid container direction=\"row\" spacing={1}>\n        {data.length\n          ? data.map((data, i) => (\n              <Grid\n                key={i}\n                item\n                xs={gridSize.xs}\n                sm={gridSize.sm}\n                md={gridSize.md}\n                lg={gridSize.lg}\n                xl={gridSize.xl}\n              >\n                {viewComponent({ data, index: i })}\n              </Grid>\n            ))\n          : null}\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        ref={listElementRef}\n        style={{ display: hasMore ? \"flex\" : \"none\", paddingTop: \"4px\" }}\n        spacing={1}\n      >\n        {Array.from({\n          length: numPlaceholders,\n        }).map((_, i) => (\n          <Grid\n            key={`empty-${i}`}\n            item\n            xs={gridSize.xs}\n            sm={gridSize.sm}\n            md={gridSize.md}\n            lg={gridSize.lg}\n            xl={gridSize.xl}\n          >\n            {viewComponent({})}\n          </Grid>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default InfiniteScroll;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useInteractiveStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(1, 0),\n    padding: theme.spacing(1, 2),\n  },\n  caption: {\n    [theme.breakpoints.up(\"md\")]: {\n      textAlign: \"right\",\n    },\n  },\n  sliderContainer: {\n    [theme.breakpoints.up(\"md\")]: {\n      paddingRight: theme.spacing(5),\n    },\n  },\n}));\n\nexport { useInteractiveStyles };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","export function characterSelectReducer(\n  state: number[],\n  action: { type: \"add\" | \"remove\" | \"reset\"; payload: number }\n) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return [\n        ...state.slice(0, state.indexOf(action.payload)),\n        ...state.slice(state.indexOf(action.payload) + 1),\n      ];\n    case \"reset\":\n      return [];\n    default:\n      throw new Error();\n  }\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\"\n}), 'Update');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Publish');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M5 4h14v2H5zm0 10h4v6h6v-6h4l-7-7-7 7zm8-2v6h-2v-6H9.83L12 9.83 14.17 12H13z\"\n}), 'PublishOutlined');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M13 5v6h1.17L12 13.17 9.83 11H11V5h2m2-2H9v6H5l7 7 7-7h-4V3zm4 15H5v2h14v-2z\"\n}), 'GetAppOutlined');","import {\n  Avatar,\n  Button,\n  ButtonGroup,\n  Card,\n  CardMedia,\n  Chip,\n  Collapse,\n  Container,\n  Grid,\n  Link,\n  makeStyles,\n  Typography,\n  Paper,\n  CardContent,\n} from \"@material-ui/core\";\nimport {\n  GetApp,\n  GetAppOutlined,\n  Publish,\n  PublishOutlined,\n  Sort,\n  SortOutlined,\n  Update,\n} from \"@material-ui/icons\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { FilterOutline, Filter } from \"mdi-material-ui\";\nimport React, {\n  Fragment,\n  useCallback,\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SettingContext } from \"../context\";\nimport { characterSelectReducer } from \"../stores/reducers\";\nimport { useInteractiveStyles } from \"../styles/interactive\";\nimport { useLayoutStyles } from \"../styles/layout\";\nimport { IStampInfo } from \"../types\";\nimport { useCachedData, useCharaName, useRefState } from \"../utils\";\nimport { charaIcons } from \"../utils/resources\";\nimport { ContentTrans } from \"./subs/ContentTrans\";\nimport InfiniteScroll from \"./subs/InfiniteScroll\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    paddingTop: \"75%\",\n    backgroundSize: \"contain\",\n  },\n  card: {\n    // margin: theme.spacing(0.5),\n    cursor: \"pointer\",\n  },\n  subheader: {\n    // \"white-space\": \"nowrap\",\n    // overflow: \"hidden\",\n    // \"text-overflow\": \"ellipsis\",\n    // \"max-width\": \"260px\",\n  },\n}));\n\nconst StampList: React.FC<{}> = () => {\n  const classes = useStyles();\n  const layoutClasses = useLayoutStyles();\n  const interactiveClasses = useInteractiveStyles();\n  const { t } = useTranslation();\n  const { contentTransMode } = useContext(SettingContext)!;\n  const getCharaName = useCharaName(contentTransMode);\n\n  const [stampsCache] = useCachedData<IStampInfo>(\"stamps\");\n\n  const [stamps, setStamps] = useState<IStampInfo[]>([]);\n  const [filteredCache, filteredCacheRef, setFilteredCache] = useRefState<\n    IStampInfo[]\n  >([]);\n  const [filterOpened, setFilterOpened] = useState<boolean>(false);\n  const [updateSort, setUpdateSort] = useState<\"asc\" | \"desc\">(\"asc\");\n  const [characterSelected, dispatchCharacterSelected] = useReducer(\n    characterSelectReducer,\n    []\n  );\n\n  const [page, pageRef, setPage] = useRefState<number>(0);\n  const [limit, limitRef] = useRefState<number>(12);\n  const [, lastQueryFinRef, setLastQueryFin] = useRefState<boolean>(true);\n  const [, isReadyRef, setIsReady] = useRefState<boolean>(false);\n\n  const getPaginatedStamps = useCallback(\n    (page: number, limit: number) => {\n      return filteredCache.slice(limit * (page - 1), limit * page);\n    },\n    [filteredCache]\n  );\n\n  const callback = (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    if (!isReadyRef.current) return;\n    if (\n      entries[0].isIntersecting &&\n      lastQueryFinRef.current &&\n      (!filteredCacheRef.current.length ||\n        filteredCacheRef.current.length > pageRef.current * limitRef.current)\n    ) {\n      setPage((page) => page + 1);\n      setLastQueryFin(false);\n    } else if (\n      filteredCacheRef.current.length &&\n      filteredCacheRef.current.length <= pageRef.current * limitRef.current\n    ) {\n      setHasMore(false);\n    }\n  };\n\n  useEffect(() => {\n    document.title = t(\"title:stampList\");\n  }, [t]);\n\n  useEffect(() => {\n    if (stampsCache.length) {\n      let cache = stampsCache;\n      if (characterSelected.length) {\n        cache = stampsCache.filter((s) =>\n          characterSelected.includes(s.characterId1)\n        );\n      } else {\n        cache = stampsCache;\n      }\n      if (updateSort === \"desc\") {\n        cache = cache.sort((a, b) => b.id - a.id);\n      } else if (updateSort === \"asc\") {\n        cache = cache.sort((a, b) => a.id - b.id);\n      }\n      setFilteredCache(cache);\n      setStamps([]);\n      setPage(0);\n    }\n  }, [\n    characterSelected,\n    stampsCache,\n    setStamps,\n    setPage,\n    setFilteredCache,\n    updateSort,\n  ]);\n\n  useEffect(() => {\n    setStamps((stamps) => [...stamps, ...getPaginatedStamps(page, limit)]);\n    setLastQueryFin(true);\n  }, [page, limit, setLastQueryFin, stampsCache, getPaginatedStamps]);\n\n  useEffect(() => {\n    setIsReady(Boolean(stampsCache.length));\n  }, [setIsReady, stampsCache]);\n\n  const ListCard: React.FC<{ data?: IStampInfo }> = ({ data }) => {\n    if (!data) {\n      // loading\n      return (\n        <Card className={classes.card}>\n          <Skeleton variant=\"rect\" className={classes.media}></Skeleton>\n          <CardContent>\n            <Typography variant=\"subtitle1\" className={classes.subheader}>\n              <Skeleton variant=\"text\" width=\"90%\"></Skeleton>\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n    return (\n      <Link\n        href={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/stamp/${data.assetbundleName}_rip/${data.assetbundleName}/${data.assetbundleName}.webp`}\n        target=\"_blank\"\n        style={{ textDecoration: \"none\" }}\n      >\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.media}\n            image={`${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/stamp/${data.assetbundleName}_rip/${data.assetbundleName}/${data.assetbundleName}.webp`}\n            title={data.name}\n          ></CardMedia>\n          <CardContent style={{ paddingBottom: \"16px\" }}>\n            <ContentTrans\n              mode={contentTransMode}\n              contentKey={`stamp_name:${data.id}`}\n              original={data.name.replace(/\\[.*\\]/, \"\").replace(/^.*：/, \"\")}\n              originalProps={{\n                variant: \"subtitle1\",\n              }}\n              translatedProps={{\n                variant: \"subtitle1\",\n              }}\n            />\n          </CardContent>\n        </Card>\n      </Link>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {t(\"common:stamp\")}\n      </Typography>\n      <Container className={layoutClasses.content}>\n        <Grid container justify=\"space-between\">\n          <ButtonGroup color=\"primary\" style={{ marginBottom: \"1%\" }}>\n            <Button size=\"medium\" onClick={() => setUpdateSort(\"asc\")}>\n              <Update />\n              {updateSort === \"asc\" ? <Publish /> : <PublishOutlined />}\n            </Button>\n            <Button size=\"medium\" onClick={() => setUpdateSort(\"desc\")}>\n              <Update />\n              {updateSort === \"desc\" ? <GetApp /> : <GetAppOutlined />}\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup color=\"primary\" style={{ marginBottom: \"1%\" }}>\n            <Button size=\"medium\" onClick={() => setFilterOpened((v) => !v)}>\n              {filterOpened ? <Filter /> : <FilterOutline />}\n              {filterOpened ? <Sort /> : <SortOutlined />}\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Collapse in={filterOpened}>\n          <Paper className={interactiveClasses.container}>\n            <Grid container direction=\"column\" spacing={1}>\n              <Grid\n                item\n                container\n                xs={12}\n                alignItems=\"center\"\n                justify=\"space-between\"\n              >\n                <Grid item xs={12} md={2}>\n                  <Typography classes={{ root: interactiveClasses.caption }}>\n                    {t(\"filter:character.caption\")}\n                  </Typography>\n                </Grid>\n                <Grid item container xs={12} md={9} spacing={1}>\n                  {Array.from({ length: 26 }).map((_, idx) => (\n                    <Grid key={\"chara-filter-\" + idx} item>\n                      <Chip\n                        clickable\n                        color={\n                          characterSelected.includes(idx + 1)\n                            ? \"primary\"\n                            : \"default\"\n                        }\n                        avatar={\n                          <Avatar\n                            alt={getCharaName(idx + 1)}\n                            src={\n                              charaIcons[`CharaIcon${idx + 1}` as \"CharaIcon1\"]\n                            }\n                          />\n                        }\n                        label={getCharaName(idx + 1)}\n                        onClick={() => {\n                          if (characterSelected.includes(idx + 1)) {\n                            dispatchCharacterSelected({\n                              type: \"remove\",\n                              payload: idx + 1,\n                            });\n                          } else {\n                            dispatchCharacterSelected({\n                              type: \"add\",\n                              payload: idx + 1,\n                            });\n                          }\n                        }}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Collapse>\n        {InfiniteScroll<IStampInfo>({\n          viewComponent: ListCard,\n          callback,\n          data: stamps,\n          gridSize: {\n            xs: 4,\n            sm: 3,\n            md: 3,\n            lg: 2,\n          },\n        })}\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default StampList;\n"],"sourceRoot":""}